package server

import (
	"github.com/rivo/tview"
	"io"
	"os/exec"
)

type TargetConfig struct {
	Title      string
	TargetName string
}

type Config struct {
	Targets []TargetConfig
}

type Session struct {
	debugger *Debugger
	command  *exec.Cmd
	stdin    io.WriteCloser
	stdout   io.ReadCloser
	running  bool

	application *tview.Application

	disassemblyText *tview.TextView
	memoryText      *tview.TextView
	registersText   *tview.TextView
	commandsText    *tview.TextView
	commandInput    *tview.InputField

	messageLine *tview.TextView
}

func RunApplication(config Config) {
	session := &Session{}

	ui := session.InitializeUI(config)

	session.application = tview.NewApplication()
	session.application.EnableMouse(true)
	session.application.SetRoot(ui, true)

	if err := session.application.Run(); err != nil {
		panic(err)
	}

}

func (s *Session) InitializeUI(config Config) tview.Primitive {
	grid := tview.NewGrid().
		SetRows(1, 0, 1).
		SetColumns(0)

	currCol := 0

	for i, target := range config.Targets {
		button := tview.NewButton(target.Title)
		pos := i
		titleLen := len(target.Title)
		button.SetSelectedFunc(func() {
			s.handleMenuButton(&config.Targets[pos])
		})
		grid.AddItem(button, 0, currCol, 1, titleLen+3, 0, 0, false)
		currCol = currCol + titleLen + 3
	}
	button := tview.NewButton("Exit")
	button.SetSelectedFunc(func() {
		s.application.Stop()
	})
	grid.AddItem(button, 0, currCol, 1, 4, 0, 0, false)

	s.disassemblyText = tview.NewTextView()
	s.disassemblyText.SetBorder(true)
	s.disassemblyText.SetTitle("Disassembly")

	s.memoryText = tview.NewTextView()
	s.memoryText.SetBorder(true)
	s.memoryText.SetTitle("Memory")

	s.registersText = tview.NewTextView()
	s.registersText.SetBorder(true)
	s.registersText.SetTitle("Registers")

	s.commandsText = tview.NewTextView()
	s.commandsText.SetBorder(true)
	s.commandsText.SetTitle("Commands")

	grid.AddItem(s.disassemblyText, 1, 0, 20, 60, 0, 0, false)
	grid.AddItem(s.memoryText, 21, 0, 15, 50, 0, 0, false)
	grid.AddItem(s.commandsText, 1, 60, 20, 20, 0, 0, false)
	grid.AddItem(s.registersText, 22, 50, 15, 30, 0, 0, false)

	s.commandInput = tview.NewInputField()
	grid.AddItem(s.commandInput, 21, 60, 1, 20, 0, 0, false)

	s.messageLine = tview.NewTextView()
	grid.AddItem(s.messageLine, 37, 0, 1, 80, 0, 0, false)

	return grid
}

func (s *Session) handleMenuButton(target *TargetConfig) {
	s.messageLine.SetText("You clicked on target " + target.Title)
}
